// Code generated by MockGen. DO NOT EDIT.
// Source: postsusers.go

// Package mock_rdb is a generated GoMock package.
package mock_rdb

import (
	context "context"
	reflect "reflect"
	domain "tMinamiii/Tweet/domain"

	gomock "github.com/golang/mock/gomock"
)

// MockPostsUsers is a mock of PostsUsers interface.
type MockPostsUsers struct {
	ctrl     *gomock.Controller
	recorder *MockPostsUsersMockRecorder
}

// MockPostsUsersMockRecorder is the mock recorder for MockPostsUsers.
type MockPostsUsersMockRecorder struct {
	mock *MockPostsUsers
}

// NewMockPostsUsers creates a new mock instance.
func NewMockPostsUsers(ctrl *gomock.Controller) *MockPostsUsers {
	mock := &MockPostsUsers{ctrl: ctrl}
	mock.recorder = &MockPostsUsersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostsUsers) EXPECT() *MockPostsUsersMockRecorder {
	return m.recorder
}

// LoadByUserIDs mocks base method.
func (m *MockPostsUsers) LoadByUserIDs(ctx context.Context, userIDs []int64, limit int, sinceUUID *string) (*[]domain.PostUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadByUserIDs", ctx, userIDs, limit, sinceUUID)
	ret0, _ := ret[0].(*[]domain.PostUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadByUserIDs indicates an expected call of LoadByUserIDs.
func (mr *MockPostsUsersMockRecorder) LoadByUserIDs(ctx, userIDs, limit, sinceUUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadByUserIDs", reflect.TypeOf((*MockPostsUsers)(nil).LoadByUserIDs), ctx, userIDs, limit, sinceUUID)
}
